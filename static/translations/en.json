{
    "lang": "English/English",
    "jokes": "translations/jokes/jokes-en.txt",
    "strings": {
        "general.yes": "Yes",
        "general.no": "No",
        "general.deactivated": "The command was deactivated on this server.",

        "log.user_changed.display_name": "Displayname of {1} was changed\n`[ {2} ]`",
        "log.user_changed.display_name.old": "Old",
        "log.user_changed.display_name.new": "New",

        "log.kira_started.title": "Hello World! `[ {1} ]`",
        "log.kira_started.body": "KIRA has been started.",

        "log.kira_saving.title": "Let's file it away! `[ {1} ]`",
        "log.kira_saving.body": "KIRA's config files are being saved.",

        "log.user_joined.title": "New User `[ {1} ]`",
        "log.user_joined.body": "The user **{1}** (<@!{2}>) with displayname `{3}` joined the server.",

        "log.user_left.title": "User left server `[ {1} ]`",
        "log.user_left.body": "The user **{1}** (<@!{2}>) with displayname `{3}` left the discord server.",

        "log.user_banned.title": "User banned `[ {1} ]`",
        "log.user_banned.body": "The user **{1}** was banned from the discord server.",

        "log.user_unbanned.title": "User unbanned `[ {1} ]`",
        "log.user_unbanned.body": "The user **{1}** was unbanned from the discord server.",

        "log.user_entry_added.title": "New user entry `[ {1} ]`",
        "log.user_entry_added.body": "**{1}** added an entry to **{2}**. See `{3}user {4} show {5}` for further information.",

        "log.new_alias.title": "New alias `[ {1} ]`",
        "log.new_alias.body": "The command `{1}` now has the alias `{2}`.",

        "log.removed_alias.title": "Alias removed `[ {1} ]`",
        "log.removed_alias.body": "The alias `{1}` for the command `{2}` was removed.",

        "log.removed_all_alias.title": "All aliases removed `[ {1} ]`",
        "log.removed_all_alias.body": "All aliases for the command `{1}` were removed.",

        "log.kira_patching.title": "Patch the tape! `[ {1} ]`",
        "log.kira_patching.body": "A patch is being installed. {1} rescues the ship!",



        "crom.search_url_subtitle": "[click here]({1}) to see",
        "crom.search_url_footer": "published by {1}",
        "crom.requested_by": "requested by {1}",
        "crom.pages": "Pages, {1}",
        "crom.users": "Users, {1}",
        "crom.author_page": "Autor's page [here]({1})",



        "command.user.user": "User",
        "command.user.not_found": "User not found.",
        "command.user.syntax_error": "Error: You didn't use the right syntax. See `{1}help user` for help.",
        "command.user.avatar_not_found": "Not found.",
        "command.user.creation_date": "Creation Date",
        "command.user.name": "Name",
        "command.user.message_count": "Message Count (Estimation)",
        "command.user.entries": "Entries",

        "command.user.no_entries": "This user has no entries.",
        "command.user.entry_not_found": "Entry not found.",

        "command.user.report.content": "Content",
        "command.user.report.date": "Creation date",
        "command.user.report.author": "Author",
        "command.user.report.url": "Message URL",

        "command.reload.start": "Reload starting now.",
        "command.reload.finished": "Reload finished.",
        "command.save.start": "Settings saved.",

        "command.report.reported": "User {1} was reported.",
        "command.report.unreported": "Entry `{1}` was deleted.",
        "command.report.user_not_found": "User {1} couldn't be found on this server.",

        "command.ban.banned": "The user {1} was banned.",
        "command.ban.user_msg": "You were banned from {1} for the following reason: {2}",
        "command.ban.user_not_found": "The user {1} couldn't be found.",
        "command.unban.unbanned": "The user {1} was unbanned.",
        "command.unban.user_msg": "You were unbanned on {1}.",

        "command.kick.kicked": "The user {1} was kicked.",
        "command.kick.user_msg": "You were kicked from {1} for the following reason: {2}",
        "command.kick.user_not_found": "The user {1} couldn't be found.",

        "command.refresh.refreshed_sg": "User list was refreshed. There is {1} new user.",
        "command.refresh.refreshed_pl": "User list was refreshed. There are {1} new users.",

        "command.perm.show_role_permissions": "Role",
        "command.perm.show_user_permissions": "User",
        "command.perm.show_enabled": "Enabled Permissions",
        "command.perm.show_disabled": "Disabled Permissions",
        "command.perm.role_not_found": "Role not found.",
        "command.perm.no_registered_permissions": "No permissions registered.",
        "command.perm.enabled": "Permission `{1}` enabled.",
        "command.perm.disabled": "Permission `{1}` disabled.",
        "command.perm.removed": "Permission `{1}` removed.",
        "command.perm.list": "Permissions",

        "command.deactivate.command_not_found": "Command `{1}` not found.",
        "commands.deactivate.deactivated": "The command was deactivated.",

        "command.activate.command_not_found": "Command `{1}` not found.",
        "commands.activate.activated": "The command was activated.",

        "command.alias.not_found": "Alias `{1}` not found!",
        "command.alias.success": "Command `{1}` now has alias `{2}`!",
        "command.alias.list": "The command `{1}` has the following aliases: {2}",
        "command.alias.which": "The alias `{1}` stands for the command `{2}`.",
        "command.alias.no_aliases": "The command `{1}` has no aliases.",
        "command.alias.not_allowed": "Can't create alias for command `{1}`. Operation not allowed.",
        "command.alias.name_not_allowed": "Can't create alias with name `{1}`. Operation not allowed.",

        "command.unalias.no_alias": "Alias `{1}` doesn't exist.",
        "command.unalias.cleared": "Alias `{1}` was removed.",
        "command.unalias.all_cleared": "All aliases for `{1}` removed.",

        "command.say.channel_not_found": "Channel `{1}` not found.",
        "command.exit": "KIRA exiting now. Have a nice day.",

        "command.joke.frequency": "To prevent spamming, the joke command can only be executed once every five minutes.",
        "command.joke.not_found": "I haven't found any jokes for the language of this server. Sorry :(",

        "command.config.channel_not_found": "Channel not found!",
        "command.config.not_text_channel": "The channel has to be a text channel!",
        "command.config.feed_not_found": "The feed does not exist! List all feeds with `{1}config feed list`.",
        "command.config.list_for_channel": "**__Channel__ {1}**\n\n**Feed-ID** - **URL** - **Title**\n{2}",
        "command.config.channel_added": "Channel feed was added!",
        "command.config.channel_deleted": "Channel-Feed was deleted!",
        "command.config.user_deleted": "User was deleted!",
        "command.config.channel_deleted.error": "Channel-Feed couldn't be deleted, there was a filesystem error!",
        "command.config.user_deleted.error": "User couldn't be deleted, there was a filesystem error!",
        "command.config.translation_deleted": "The translation string `{1}` was removed!",
        "command.config.translation_not_found": "The translation string `{1}` doesn't exist!",
        "command.config.language_not_found": "The language `{1}` doesn't exist!",
        "command.config.language_changed": "KIRAs language was changed to `{1}`!",
        "command.config.invalid_color": "Wrong color `{1}`. The color has to be an 6-digit hexnumber matching the pattern `#RRGGBB`.",
        "command.config.log_set": "Alle logs will be posted in {1}.",
        "command.config.list_translations": "All translations changed for the server:\n**Key** - **Value**\n\n",
        "command.config.mute_role_set": "Role {1} will now be used for !mute.",
        "command.config.mute_role_show": "For !mute the role {1} is used.",
        "command.config.mute_role_not_found": "Role {1} not found!",

        "command.dice.only_numbers": "One of the parameters wasn't a number.",
        "command.dice.min_too_big": "The second number has to be bigger than the first!",
        "command.dice.too_many_dice": "A maximum of 10 dice can be rolled at a time!",
        "command.dice.interdimensional": "Spheres are not good dices.",

        "command.not_found": "Command `{1}` not found!",
        "command.too_long": "Command was too long!",
        "command.no_permission": "You don't have the permissions to run this command.",
        "command.invalid_syntax": "Error: You didn't use the right syntax. See `{1}help {2}` for help.",
        "command.user_not_found": "User `{1}` couldn't be found!",

        "command.autorespond.not_found": "This autorespond-message doesn't exist.",
        "command.autorespond.added": "Autorespond was added.",
        "command.autorespond.already_exists": "This autorespond already exists!",
        "command.autorespond.empty": "No auto-responses defined on this server.",
        "command.autorespond.deleted": "Auto-response was deleted.",

        "command.stat.name": "Name",
        "command.stat.nothing_found": "Your search has no results.",
        "command.stat.error": "Error in your search syntax. Consult the help command for more information.",

        "command.mute.left": "{1} mutes left to mute.",
        "command.mute.muted": "{1} was muted.",
        "command.mute.already_muted": "{1} was already muted.",
        "command.unmute.unmuted": "{1} is not muted anymore.",
        "command.unmute.not_muted": "{1} is not muted.",

        "command.info.version": "Version",
        "command.info.uptime": "Uptime",
        "command.info.bugs_features": "Bug-Reports and Feature-Requests",
        "command.info.title": "General KIRA information",
        "command.info.node": "NodeJS version",
        "command.info.discordjs": "Discord.js Version",

        "command.help.list.title": "List of KIRA commands",
        "command.help.list.footer": "For further help, see `{1}help <command>` (without < and >).",
        "command.help.no_help_found": "No help page found for this command.",
        "command.help.sub.title": "Help page for {1}{2}",
        "command.help.sub.aliases": "Aliases",

        "command.help.command.help": {
            "std": "Lists help pages.",
            "subcommands": [
                {
                    "syntax": "{p}help",
                    "help": "Lists all commands you have permissions to use."
                },
                {
                    "syntax": "{p}help all",
                    "help": "Lists every command, even the ones, you don't have permissions to use."
                },
                {
                    "syntax": "{p}help <command>",
                    "help": "Lists the help page for a particular command."
                }
            ]
        },

        "command.help.command.welcome": {
            "std": "Welcomes a user.",
            "subcommands": [
                {
                    "syntax": "{p}{c}",
                    "help": "Write a welcome message into the chat."
                },
                {
                    "syntax": "{p}{c} <user>",
                    "help": "Welcomes a user with a random welcoming message."
                }
            ]
        },

        "command.help.command.dice": {
            "std": "Writes a random number.",
            "subcommands": [
                {
                    "syntax": "{p}{c}",
                    "help": "Writes a random number from 1 to 6."
                },
                {
                    "syntax": "{p}{c} <minimum> <maximum>",
                    "help": "Writes a random number from <minimum> to <maximum>."
                },
                {
                    "syntax": "{p}{c} <die> ...",
                    "help": "You can roll up to 10 dice. Use the dice syntax <COUNT>d<FACES>+/-<MALUS>."
                },
                {
                    "syntax": "(Beispiel) {p}{c} 2d20+2 d6",
                    "help": "Rolls two 20-faced dice and adds 2 to the result (but 20 is max). After that KIRA rolls a 6-faced dice."
                }
            ]
        },

        "command.help.command.joke": {
            "std": "Writes a random joke.",
            "subcommands": [
                {
                    "syntax": "{p}{c}",
                    "help": "Writes a random joke."
                }
            ]
        },

        "command.help.command.user": {
            "std": "Gibt Informationen zu einem Nutzer.",
            "subcommands": [
                {
                    "syntax": "{p}{c} <user>",
                    "help": "Gibt Informationen zu dem Nutzer aus."
                },
                {
                    "syntax": "{p}{c} <user> show",
                    "help": "Alle Akteneinträge des Nutzers anzeigen."
                },
                {
                    "syntax": "{p}{c} <user> show <entry>",
                    "help": "Den Eintrag mit der ID <entry> des Nutzers <user> anzeigen."
                }
            ]
        },

        "command.help.command.activate": {
            "std": "Activates a command on the server.",
            "subcommands": [
                {
                    "syntax": "{p}{c} <command>",
                    "help": "Activates the command <command> on the server."
                }
            ]
        },

        "command.help.command.deactivate": {
            "std": "Deactivates a command on the server.",
            "subcommands": [
                {
                    "syntax": "{p}{c} <command>",
                    "help": "Deactivates the command <command> on the server."
                }
            ]
        },

        "command.help.command.alias": {
            "std": "Creates an alias for a command.",
            "subcommands": [
                {
                    "syntax": "{p}{c} <command> <alias>",
                    "help": "Creates an alias with the name <alias> for the command <command>."
                },
                {
                    "syntax": "{p}{c} <command>",
                    "help": "Shows all aliases for the command <command>."
                },
                {
                    "syntax": "{p}{c} <alias> which",
                    "help": "Shows, which command the alias <alias> belongs to."
                }
            ]
        },

        "command.help.command.ban": {
            "std": "Bans a user.",
            "subcommands": [
                {
                    "syntax": "{p}{c} <user> <why>",
                    "help": "Bans a user <user> with the message <why> and adds it to his user file. <why> will be send to him by KIRA automatically."
                }
            ]
        },

        "command.help.command.unban": {
            "std": "Unbans a user.",
            "subcommands": [
                {
                    "syntax": "{p}{c} <user>",
                    "help": "Unbans the user <user>."
                }
            ]
        },

        "command.help.command.config": {
            "std": "Configurates KIRA.",
            "subcommands": [
                {
                    "syntax": "{p}{c} feed add <feedURL> <channelID>",
                    "help": "Creates a new RSS feed from the RSS URL <feedURL> in the channel with the ID <channelID>."
                },
                {
                    "syntax": "{p}{c} feed color <feedID> <color>",
                    "help": "Changes the color of the RSS feed with the ID <feedID> to the color <color>. The color has to be a hex-color."
                },
                {
                    "syntax": "{p}{c} feed title <feedID> <title>",
                    "help": "Sets the feed title of the RSS feed with ID <feedID> to <title>."
                },
                {
                    "syntax": "{p}{c} feed delete <feedID>",
                    "help": "Removes the RSS feed with the ID <feedID>."
                },
                {
                    "syntax": "{p}{c} feed list",
                    "help": "Lists all RSS feeds."
                },
                {
                    "syntax": "{p}{c} feed list <channelID>",
                    "help": "Lists all RSS feeds for the channel with the ID <channelID>."
                },
                {
                    "syntax": "{p}{c} language list",
                    "help": "Lists all languages an their IDs."
                },
                {
                    "syntax": "{p}{c} language <languageID>",
                    "help": "Changes the language of KIRA to the language with the ID <languageID>."
                },
                {
                    "syntax": "{p}{c} translation <key> <value>",
                    "help": "Changes the server side translation with the key <key> to the value <value>."
                },
                {
                    "syntax": "{p}{c} translation <key> delete",
                    "help": "Removes the server side translation with the key <key>."
                },
                {
                    "syntax": "{p}{c} delu <user>",
                    "help": "Deletes all data of the user <user>."
                },
                {
                    "syntax": "{p}{c} log <channelID>",
                    "help": "Sets the log channel to <channelID>. KIRA will log new users, ban/unbans, kicks, saves and more."
                },
                {
                    "syntax": "{p}{c} mute-role show",
                    "help": "Shows the role that's used for !mute."
                },
                {
                    "syntax": "{p}{c} mute-role set <roleID>",
                    "help": "Sets the role to <roleID> that's used for !mute."
                }
            ]
        },

        "command.help.command.kick": {
            "std": "Kickt einen Nutzer.",
            "subcommands": [
                {
                    "syntax": "{p}{c} <user> <why>",
                    "help": "Kicks a user <user> with the message <why> and adds it to his user file. <why> will be send to him by KIRA automatically."
                }
            ]
        },

        "command.help.command.perm": {
            "std": "Changes the permissions of users or roles.",
            "subcommands": [
                {
                    "syntax": "General information",
                    "help": "Every command has it's own permission. Users need to have an enabled permission in order to be able of using a command."
                },
                {
                    "syntax": "Shortcuts",
                    "help": "The permission `a.*` is equal to `a.b.c.d`. Therefore strings ending with a asterisk is equal to every permission starting with this string."
                },
                {
                    "syntax": "Scopes of permissions",
                    "help": "Permission a user has is superior to the ones of his roles, also disabled permissions disable enabled permissions. This is combinable with asterisk (for example: enabling `command.*` and disabling `command.joke`)."
                },
                {
                    "syntax": "{p}{c} list",
                    "help": "Lists all permissions."
                },
                {
                    "syntax": "{p}{c} user <user> enable <permission>",
                    "help": "Gives the user <user> the permission <permission>."
                },
                {
                    "syntax": "{p}{c} user <user> disable <permission>",
                    "help": "Disables the permission <permission> for the user <user>."
                },
                {
                    "syntax": "{p}{c} user <user> remove <permission>",
                    "help": "Removes the permission <permission> from the user <user>. (The permission will be removed from their enabled/disabled permissions lists.)"
                },
                {
                    "syntax": "{p}{c} user <user> show",
                    "help": "Shows all enabled and disabled permissions of user <user>."
                },
                {
                    "syntax": "{p}{c} role <roleID> enable <permission>",
                    "help": "Activates the permission <permission> for the role with the ID <roleID>."
                },
                {
                    "syntax": "{p}{c} role <roleID> disable <permission>",
                    "help": "Deactivates the permission <permission> for the role with the ID <roleID>."
                },
                {
                    "syntax": "{p}{c} role <roleID> remove <permission>",
                    "help": "Removes the permission <permission> from the role <roleID>. (The permission will be removed from its enabled/disabled permissions lists.)"
                },
                {
                    "syntax": "{p}{c} role <roleID> show",
                    "help": "Shows all enabled/disabled permissions for the role with the ID <roleID>."
                }
            ]
        },

        "command.help.command.reload": {
            "std": "Reloads the server's settings.",
            "subcommands": [
                {
                    "syntax": "{p}{c}",
                    "help": "Relaods the server's settings."
                }
            ]
        },

        "command.help.command.patch": {
            "std": "Installs a KIRA Patch.",
            "subcommands": [
                {
                    "syntax": "{p}{c} <URL>",
                    "help": "Installs a KIRA Patch from <URL>."
                }
            ]
        },

        "command.help.command.save": {
            "std": "Saves the server's settings.",
            "subcommands": [
                {
                    "syntax": "{p}{c}",
                    "help": "The server's settings will be saved."
                }
            ]
        },

        "command.help.command.say": {
            "std": "Let's KIRA write a message.",
            "subcommands": [
                {
                    "syntax": "{p}{c} <channel> <message>",
                    "help": "Writes <message> in the channel <channel>."
                }
            ]
        },

        "command.help.command.report": {
            "std": "Adds an entry to a user's file.",
            "subcommands": [
                {
                    "syntax": "{p}{c} <user> <message>",
                    "help": "Adds an entry with <message> to <user>'s user file."
                }
            ]
        },

        "command.help.command.unreport": {
            "std": "Removes a file entry.",
            "subcommands": [
                {
                    "syntax": "{p}{c} <user> <entryID>",
                    "help": "Removes the entry with the ID <entryID> from <user>'s user file."
                }
            ]
        },

        "command.help.command.thanks": {
            "std": "Spread thankfullness.",
            "subcommands": [
                {
                    "syntax": "{p}{c}",
                    "help": "Thank KIRA."
                },
                {
                    "syntax": "{p}{c} <user>",
                    "help": "KIRA will thank <user>."
                }
            ]
        },

        "command.help.command.ping": {
            "std": "Pong!",
            "subcommands": [
                {
                    "syntax": "{p}{c}",
                    "help": "Pong!"
                }
            ]
        },

        "command.help.command.exit_hard": {
            "std": "Stop KIRA.",
            "subcommands": [
                {
                    "syntax": "{p}{c}",
                    "help": "Stop KIRA."
                }
            ]
        },

        "command.help.command.unalias": {
            "std": "Removes an alias.",
            "subcommands": [
                {
                    "syntax": "{p}{c} <alias>",
                    "help": "Removes the alias <alias>."
                }
            ]
        },

        "command.help.command.reload_hard": {
            "std": "Reloads KIRA.",
            "subcommands": [
                {
                    "syntax": "{p}{c}",
                    "help": "Reload all servers and translations."
                }
            ]
        },

        "command.help.command.syntax": {
            "std": "Help for KIRAs command syntax.",
            "subcommands": [
                {
                    "syntax": "{p}{c}",
                    "help": "Shows a help for KIRAs syntax."
                }
            ]
        },

        "command.help.command.refresh": {
            "std": "Refreshes KIRAs user list.",
            "subcommands": [
                {
                    "syntax": "{p}{c}",
                    "help": "Refreshes KIRAs user list."
                }
            ]
        },

        "command.help.command.get_log": {
            "std": "Sends you the logs of the bot via a direct message.",
            "subcommands": [
                {
                    "syntax": "{p}{c} <date>",
                    "help": "Sends you the log from the date <date>. Notice the date format DD.MM.YYYY!"
                },
                {
                    "syntax": "{p}{c} last",
                    "help": "Sends you the last 3 logs."
                },
                {
                    "syntax": "{p}{c} current",
                    "help": "Sends you the current log."
                }
            ]
        },

        "command.help.command.autorespond": {
            "std": "Manages the auto-response messages.",
            "subcommands": [
                {
                    "syntax": "{p}{c} del <key>",
                    "help": "Deletes a auto-response message. Please note: Use quotation marks around <key> to help KIRA get it correctly."
                },
                {
                    "syntax": "{p}{c} del \"<key>\"",
                    "help": "Deletes a auto-response message."
                },
                {
                    "syntax": "{p}{c} list",
                    "help": "Lists all auto-responses."
                },
                {
                    "syntax": "{p}{c} add <key> <response>",
                    "help": "The message <key> is automatically answered by KIRA with <response>. Please note: Use quotation marks around <key> and <respond> to help KIRA get it correctly."
                },
                {
                    "syntax": "{p}{c} add \"<key>\" \"<response>\"",
                    "help": "The message <key> is automatically answered by KIRA with <response>."
                }
            ]
        },

        "command.help.command.stat": {
            "std": "Searches for users in the member-list of the server.",
            "subcommands": [
                {
                    "syntax": "{p}{c} <queries...> [or <queries...> ...]",
                    "help": "Picks all users, who fulfill certain queries. A user has to fulfill all queries to be listed. Multiple queries can be connected by \"or\"."
                },
                {
                    "syntax": "(Query) last_message:<time>",
                    "help": "The last message of a user has to be in a specific lapse of time: <time>."
                },
                {
                    "syntax": "(Query) messages_count:<count> oder messages_count<<count> oder messages_count><count>",
                    "help": "The user has to have more (>), less (<) or equal (:) messages compared to <count>. See the example at the end."
                },
                {
                    "syntax": "(Query) has_permission:<permission>",
                    "help": "The user has the permission <permission>."
                },
                {
                    "syntax": "(Query) has_role:<id>",
                    "help": "The user has a role with the ID <id>. Only IDs are allowed."
                },
                {
                    "syntax": "(Query) member_since:<time>",
                    "help": "The user is a member since <time>."
                },
                {
                    "syntax": "(Notice) Zeit-Syntax",
                    "help": "To define a space of time, you use numbers with one of the suffixes d (day), w (weel), m (month) or y (year). 1y2m means 1 year and 2 months. 3d5m means 3 days and 5 months. Spaces are not allowed."
                },
                {
                    "syntax": "(Example) !stat last_message:1m member_since:1m or messages_count<10",
                    "help": "Lists all users, who either did join or write a message in the last month or all users who did write less than 10 messages."
                }
            ]
        },

        "command.help.command.ship": {
            "std": "Mixes two names.",
            "subcommands": [
                {
                    "syntax": "{p}{c} <name> <name>",
                    "help": "Creates a name for a shipping of two characters. For Names with spaces see `!help syntax`."
                }
            ]
        },

        "command.help.command.info": {
            "std": "Lists general information about the currently running KIRA instance.",
            "subcommands": [
                {
                    "syntax": "{p}{c}",
                    "help": "Lists general information about the currently running KIRA instance."
                }
            ]
        },

        "command.help.command.search": {
            "std": "Uses the Crom-API to search for different entries and authors on all branches.",
            "subcommands": [
                {
                    "syntax": "{p}{c} [branch1,branch2,...] <query>",
                    "help": "Searches for authors and pages similar to <query>."
                },
                {
                    "syntax": "(Example) {p}{c} SCP-001",
                    "help": "Searches on all branches for articles with titles about SCP-001."
                },
                {
                    "syntax": "(Example) {p}{c} de SCP-017",
                    "help": "Searches on the german branch for articles with titles about SCP-001."
                },
                {
                    "syntax": "(Example) {p}{c} de,en,pt SCP-017",
                    "help": "Searches on the german, the original english and on the portugese branch for articles with titles about SCP-017."
                }
            ]
        },

        "command.help.syntax": "In help pages, everything in `<` and `>` is a necessary variable. Everything in `[` and `]` are optional. For example:\n```!help [command]```\n[command] doesn't have to be given.\n\nEvery not quoted string will be splitted at whitespaces. For example:\n```!hello world wow```\n`hello` is the command, `world` and `wow` are arguments. If you want to have `Hello World!` as one argument, you have to add quotation marks. For example: ```!a \"Hello World!\"```",

        "command.help.welcome": [
            "Welcome, {1}!",
            "Welcome!"
        ],

        "command.help.ywc": [
            "You're welcome!",
            "No problem!",
            "I will ignore the fact, that I don't have feelings and that your gratefulness can't touch me. So: You're welcome!",
            "Wow, I was thanked!"
        ],

        "command.help.thanks": [
            "Thank you, {1}!",
            "I shall send you gratefulness, {1}!"
        ],

        "command.ship.jealous": [

        ],

        "command.ship.kira_kai": [

        ]
    }
}